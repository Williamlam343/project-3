{"version":3,"sources":["utils/actions.js","utils/reducers.js","utils/GlobalState.js","utils/queries.js","utils/helpers.js","components/Card/card.js","components/ProductList/ProductList.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","utils/auth.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","components/Carousel/carousel.js","components/Tab/tab.js","components/Footer/footer.js","components/CartItem/index.js","components/Cart/index.js","App.js","serviceWorker.js","index.js"],"names":["UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","reducer","state","action","type","products","cartOpen","cart","product","map","_id","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","page","useReducer","dispatch","useStoreContext","useContext","QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","ShoeCard","item","image","name","price","description","quantity","textClassName","className","actions","to","href","closeIcon","header","waves","ProductList","useState","limit","offset","pagination","setPagination","category","useParams","useQuery","variables","loading","data","refetch","useEffect","items","onSelect","activePage","Math","ceil","total","Home","Detail","id","currentProduct","setCurrentProduct","size","setSize","find","forEach","then","indexedProducts","addToCart","itemInCart","cartItem","parseInt","s","m","src","style","width","onClick","disabled","revealIcon","title","multiple","onChange","shoeSize","target","options","classes","dropdownOptions","alignment","autoTrigger","closeOnClick","constrainWidth","coverTrigger","hover","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","color","Jumbotron","children","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","Login","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","a","preventDefault","mutationResponse","Auth","handleChange","onSubmit","label","Signup","addUser","firstName","lastName","Nav","alignLinks","brand","centerLogo","menuIcon","draggable","edge","preventScrolling","loggedIn","logout","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","alt","HomeCarousel","fullscreen","duration","indicators","interval","placement","HomeTab","brands","scope","onShow","responsiveThreshold","Infinity","HomeFooter","links","CartItem","minWidth","removeFromCart","horizontal","placeholder","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","res","redirectToCheckout","sessionId","checkout","session","getCart","sum","toFixed","calculateTotal","productIds","i","push","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d0624381.chunk.js","sourcesContent":["export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\n\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import { useReducer } from \"react\";\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState)\n}","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n    page: 0,\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import { gql } from \"@apollo/client\";\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID, $limit: Int, $offset: Int) {\n    products(category: $category, limit: $limit, offset: $offset) {\n      items {\n        _id\n        name\n        description\n        price\n        quantity\n        image\n        category {\n          _id\n          name\n        }\n      }\n      total\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","import React from 'react';\nimport { Card, Icon, CardTitle, Col, Row, Button } from \"react-materialize\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport { Link } from 'react-router-dom';\n\nexport default function ShoeCard(item) {\n    const [state, dispatch] = useStoreContext();\n    const {\n        image,\n        name,\n        _id,\n        price,\n        quantity,\n        description\n    } = item;\n\n    return (\n\n        <Card\n\n            textClassName=\"grey-text text-darken-4\"\n            className=\"min-w-full z-depth-2\"\n            actions={[\n                <Link to={`/products/${_id}`}>\n                    <Button className=\"red lighten-1\" key=\"1\" href=\"#\">Buy Now</Button>\n                </Link>\n            ]}\n            closeIcon={<Icon>close</Icon>}\n            header={\n                <Link to={`/products/${_id}`}>\n                    <CardTitle className=\"\" waves=\"red\" image={image}\n\n                    ><span className=\"grey-text text-darken-4\">{name}</span></CardTitle>\n                </Link>\n\n            }\n\n        >\n            <h6>{description}</h6>\n            <h5>{`$${price}`}</h5>\n        </Card>\n\n\n    );\n}","import React, { useEffect, useState } from \"react\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { UPDATE_PRODUCTS } from \"../../utils/actions\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\nimport ShoeCard from \"../Card\";\nimport { Pagination, Row } from \"react-materialize\";\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n  // num of pages = total / limit (round up)\n  // offset = page * limit\n\n  const [pagination, setPagination] = useState({\n    page: 0,\n    limit: 8,\n    offset: 0,\n  });\n  const { category } = useParams();\n\n  const { loading, data, refetch } = useQuery(QUERY_PRODUCTS, {\n    variables: { ...pagination },\n  });\n\n  useEffect(() => {\n    refetch({ ...pagination });\n  }, [pagination.page]);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products.items,\n      });\n    }\n  }, [data]);\n\n  function pageHandler(page) {\n    // Calculate the offset based off the total number of items and the page\n    setPagination({\n      ...pagination,\n      page: page - 1,\n      offset: (page - 1) * pagination.limit,\n    });\n  }\n\n  function filterProducts() {\n    if (!category) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category.name === category\n    );\n  }\n\n  return (\n    <>\n      <div className=\"container my-2\">\n        <h3>{category}</h3>\n        {state.products.length ? (\n          <div className=\"grid md:grid-cols-2 grid-cols-1 lg:grid-cols-4 gap-2 my-4\">\n            {filterProducts().map((product) => (\n              <ShoeCard\n                key={product._id}\n                _id={product._id}\n                image={product.image}\n                name={product.name}\n                price={product.price}\n                quantity={product.quantity}\n                description={product.description}\n                category={product.category}\n              />\n            ))}\n          </div>\n        ) : (\n          <h3>You haven't added any products yet!</h3>\n        )}\n        {loading ? (\n          <div>Loading...</div>\n        ) : (\n          <Row>\n            <Pagination\n              onSelect={pageHandler}\n              activePage={pagination.page + 1}\n              className=\"white flex justify-center\"\n              items={Math.ceil(data.products.total / pagination.limit)}\n            />\n          </Row>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default ProductList;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\n\n\nconst Home = () => {\n  return (\n\n    <div className=\"min-h-screen\">\n      <h3 className=\"container\">Featured:</h3>\n\n      <ProductList />\n    </div>\n\n\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { Row, Col, Card, Icon, Button, Select } from 'react-materialize';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\n\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n  const [currentProduct, setCurrentProduct] = useState({});\n  const [size, setSize] = useState(\"\")\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n  const { products, cart } = state;\n\n\n\n  useEffect(() => {\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products.items,\n      });\n\n      data.products.items.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n\n  function inputHandler(size) {\n\n\n    let shoeSize = size.target.value\n\n    setSize(shoeSize)\n\n  }\n\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n\n    console.log(currentProduct)\n  };\n\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container md:mx-3 my-1\">\n\n          <Row>\n            <Link className=\"block\" to=\"/\">← Back to Products</Link>\n            <Col\n              s={12}\n              m={6}\n              className=\"s5\"\n            >\n              <img className=\"rounded z-depth-2 my-1 w-full h-auto\" src={currentProduct.image}>\n              </img>\n            </Col>\n\n            <Col\n              s={12}\n              m={4}\n              className=\"s5\"\n\n            >\n\n              <Card\n                style={{ width: \"100%\" }}\n                className=\"text-black flex flex-col justify-center z-depth-2 w-full right-0\"\n                actions={\n                  size ?\n                    <Button onClick={addToCart} className=\"rounded red lighten-1\">Add to Cart</Button> :\n                    <Button onClick={addToCart} disabled className=\"rounded red lighten-1\">Add to Cart</Button>\n                }\n\n                closeIcon={<Icon>close</Icon>}\n                revealIcon={<Icon>more_vert</Icon>}\n                textClassName=\"grey-text text-darken-4\"\n                title={<h4 className=\"\"> {currentProduct.name}</h4>}\n              >\n                <h6 className=\"\">{currentProduct.description}</h6>\n                <h5 className=\"\">{`$${currentProduct.price}`}</h5>\n                <div className=\"relative flex justify-center\">\n                  <Select\n                    className=\" grey-text text-darken-3\"\n                    id=\"Select-40\"\n                    multiple={false}\n                    onChange={inputHandler}\n                    options={{\n                      classes: 'grey-text text-darken-3',\n                      dropdownOptions: {\n                        alignment: 'left',\n                        autoTrigger: true,\n                        closeOnClick: true,\n                        constrainWidth: true,\n                        coverTrigger: true,\n                        hover: false,\n                        inDuration: 150,\n                        onCloseEnd: null,\n                        onCloseStart: null,\n                        onOpenEnd: null,\n                        onOpenStart: null,\n                        outDuration: 250\n                      }\n                    }}\n                    value=\"\" >\n                    <option\n                      className=\"\"\n                      disabled\n                      value=\"\">\n                      Pick a Size\n                    </option>\n                    <option\n                      color=\"red\"\n                      value=\"8\">\n                      8\n                    </option>\n                    <option value=\"9\">\n                      9\n                    </option>\n                    <option value=\"10\">\n                      10\n                    </option>\n                    <option value=\"11\">\n                      11\n                    </option>\n                    <option value=\"12\">\n                      12\n                    </option>\n                    <option value=\"13\">\n                      13\n                    </option>\n                  </Select>\n\n                </div>\n\n              </Card>\n\n              <div className=\"flex justify-center\">\n                <Link to=\"/cart\">\n\n                  <Button className=\"rounded z-depth-2 relative my-10 white-text text-darken-4 blue\">Procced to Checkout</Button>\n                </Link>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      ) : null}\n      {loading ? <div>Loading...</div> : null}\n\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Link } from \"react-router-dom\"\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <Link to=\"/\">Back to Home</Link>\n        <h4>No Results</h4>\n\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const LOGOUT = gql`\n  mutation logout {\n    logOut {\n      success\n    }\n  }\n  `;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\nimport { Button, TextInput } from \"react-materialize\"\nfunction Login() {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container min-h-screen my-1\">\n      <h5> Don't have an account? </h5>\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h5 className=\"my-4\">Login</h5>\n      <form onSubmit={handleFormSubmit}>\n        <div >\n\n          <TextInput\n            label=\"Email Address\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"\">\n          {/* <label htmlFor=\"pwd\">Password:</label> */}\n          <TextInput\n            label=\"Password\"\n            password\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row justify-center\">\n          <Button waves=\"light\" className=\"red lighten-1\" type=\"submit\">Submit</Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\nimport { Button, TextInput } from \"react-materialize\"\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container  min-h-screen my-1\">\n      <h5> Already have an account? </h5>\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h5>Signup</h5>\n      <form onSubmit={handleFormSubmit}>\n\n        <div>\n          <TextInput\n            id=\"firstName\"\n            label=\"First Name\"\n          />\n        </div>\n        <div>\n          <TextInput\n            label=\"Last Name\"\n\n\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div >\n          <TextInput\n            label=\"Email\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <TextInput\n            label=\"Password\"\n            password\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row justify-center\">\n          <Button className=\"red lighten-1\" type=\"submit\">Submit</Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from 'react';\nimport { Navbar, Icon } from 'react-materialize';\nimport { Link } from 'react-router-dom';\nimport Auth from '../../utils/auth';\nexport default function Nav() {\n\n\n\n\n  return (\n    <Navbar\n      className=\"white z-depth-3\"\n      alignLinks=\"right\"\n\n      brand={<Link className=\"grey-text text-darken-4 brand-logo\" to=\"/\">Soles R' Us</Link>}\n\n      centerLogo\n      id=\"mobile-nav\"\n      menuIcon={<Icon className=\"black-text\">menu</Icon>}\n      options={{\n        draggable: true,\n        edge: 'left',\n        inDuration: 250,\n        onCloseEnd: null,\n        onCloseStart: null,\n        onOpenEnd: null,\n        onOpenStart: null,\n        outDuration: 200,\n        preventScrolling: true\n      }}\n    >\n      {Auth.loggedIn() ? <Link className=\"grey-text text-darken-3\" onClick={() => Auth.logout()}>\n        Logout\n      </Link> :\n        <Link className=\"grey-text text-darken-3\" to='/login'>\n          Login\n        </Link>\n      }\n      {!Auth.loggedIn() && <Link className=\"grey-text text-darken-3\" to='/signup'>\n        Signup\n      </Link>}\n\n\n      {Auth.loggedIn() && <Link className=\"grey-text text-darken-3\" to='/orderHistory'>\n        Your Orders\n      </Link>}\n\n      <Link className=\"grey-text text-darken-3\" to='/cart'>\n        <p>\n          <Icon>shopping_cart</Icon>\n        </p>\n      </Link>\n\n    </Navbar>\n  );\n}","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n\n      <h4>Success!</h4>\n      <h5>Thank you for your purchase!</h5>\n      <h5>You will now be redirected to the home page</h5>\n\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport NoMatch from \"./NoMatch\"\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container min-h-screen my-1\">\n\n        {user ? (\n          <>\n            <Link to=\"/\">← Back to Products</Link>\n            <h4>\n              Order History for {user.firstName} {user.lastName}\n            </h4>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h5>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h5>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : <NoMatch />}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","\nimport React from 'react';\nimport { Carousel } from 'react-materialize';\nimport { Slider, Caption, Slide } from 'react-materialize';\n\nexport default function HomeCarousel() {\n\n    return (\n        <Slider\n\n            fullscreen={false}\n            options={{\n                duration: 500,\n                height: 300,\n                indicators: false,\n                interval: 6000\n            }}\n        >\n            <Slide image={<img alt=\"carousel shoes\" src=\"https://cdn.discordapp.com/attachments/736379151853944852/905672780379467826/union-air-jordan-4-guava-DC9533-800-6.png\" />}>\n                <Caption placement=\"left\">\n                    <h3 className=\"light grey-text text-darken-4\">\n                        This is our big Tagline!\n                    </h3>\n                    <h5 className=\"light grey-text text-darken-4\">\n                        Here's our small slogan.\n                    </h5>\n                </Caption>\n            </Slide>\n            <Slide image={<img alt=\"\" src=\"\" />}>\n                <Caption placement=\"left\">\n                    <h3>\n                        Left Aligned Caption\n                    </h3>\n                    <h5 className=\"light grey-text text-lighten-3\">\n                        Here's our small slogan.\n                    </h5>\n                </Caption>\n            </Slide>\n            <Slide image={<img alt=\"\" src=\"\" />}>\n                <Caption placement=\"right\">\n                    <h3>\n                        Right Aligned Caption\n                    </h3>\n                    <h5 className=\"light grey-text text-lighten-3\">\n                        Here's our small slogan.\n                    </h5>\n                </Caption>\n            </Slide>\n            <Slide image={<img alt=\"\" src=\"\" />}>\n                <Caption placement=\"center\">\n                    <h3>\n                        This is our big Tagline!\n                    </h3>\n                    <h5 className=\"light grey-text text-lighten-3\">\n                        Here's our small slogan.\n                    </h5>\n                </Caption>\n            </Slide>\n        </Slider>\n    )\n}","import React from \"react\";\nimport { Tab, Tabs } from \"react-materialize\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from '@apollo/client';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nexport default function HomeTab() {\n\n\n    const { loading, data } = useQuery(QUERY_CATEGORIES)\n\n    const brands = data?.categories || []\n\n\n    return (\n        <Tabs\n            className=\" z-depth-2 white lighten-2 tabs-transparent tabs-fixed-width\"\n            scope=\"tabs-\"\n        >\n\n            {loading ? (<div>Loading...</div>) : (\n                brands.map((brand) =>\n                    <Tab\n\n                        key={brand.name}\n                        options={{\n                            duration: 300,\n                            onShow: null,\n                            responsiveThreshold: Infinity,\n                        }}\n                        title={\n                            <Link to={`/brands/${brand.name}`}>\n                                <p className=\"grey-text text-darken-3\">{brand.name}</p>\n                            </Link>\n                        }\n                    ><div className=\"container\">\n\n\n                        </div>\n                    </Tab>\n\n                )\n            )}\n\n        </Tabs>\n    )\n}","import React from \"react\";\nimport { Footer } from \"react-materialize\";\n\n\nexport default function HomeFooter() {\n    return (\n        <Footer\n            className=\"white bottom-0 z-depth-3 lighten-1\"\n\n\n            links={\n                <ul >\n                    <li><a className=\"grey-text text-darken-3\" href=\"#!\">GitHub</a></li>\n                </ul>\n            }\n\n        >\n            <h5 className=\"grey-text text-darken-4\">\n                About\n            </h5>\n            <p className=\"grey-text text-darken-4\">\n                Built using React, Materialize, Tailwinds, GraphQL\n            </p>\n        </Footer>\n    )\n}","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport { Card, Icon, CardTitle, Button } from 'react-materialize';\n\nexport default function CartItem({ item }) {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n\n    <Card\n      style={{ minWidth: \"100%\" }}\n      actions={[\n        <Button\n          onClick={() => removeFromCart(item)}\n          className=\"red lighten-1\">Remove from Cart</Button>\n      ]}\n      closeIcon={<Icon>close</Icon>}\n      header={<CardTitle image={item.image} />}\n      horizontal\n      revealIcon={<Icon>more_vert</Icon>}\n      className=\"z-depth-2\"\n\n    >\n      <h5>{item.name}</h5>\n      <p>{item.description}</p>\n      <h4>{`$${item.price}`}</h4>\n      <p>Size:12</p>\n      <input\n        type=\"number\"\n        placeholder=\"1\"\n        value={item.purchaseQuantity}\n        onChange={onChange}\n      />\n\n    </Card>\n\n  )\n\n}\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport { Link } from 'react-router-dom';\nimport { Button, Row, Col } from \"react-materialize\"\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n  console.log(state.cart)\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  return (\n    <div className=\"container min-h-screen\">\n      <Link className=\"blue-text block\" to=\"/\">← Back to Shopping</Link>\n      <h4>Shopping Cart</h4>\n      {state.cart.length ? (\n        <Row >\n          <Col\n            className=\"flex flex-col md:flex-row space-between\"\n            m={12}>\n            <p className=\"text-2xl\" >Total: ${calculateTotal()}</p>\n\n            {Auth.loggedIn() ? (\n              <Button className=\"blue relative md:bottom-2\" onClick={submitCheckout}>Checkout</Button>\n            ) : (\n              <Link to=\"/login\">Login to Checkout</Link>\n            )}\n          </Col>\n          <Col m={12}\n            className=\"grid gap-4 xl:grid-cols-2 grid-cols-1\">\n            {state.cart.map((item) => (\n              <CartItem key={item._id} item={item} />\n            ))}\n          </Col>\n\n        </Row>\n      ) : (\n        <h5>\n          You haven't added anything to your cart yet!\n        </h5>\n      )\n      }\n    </div >\n  );\n};\n\nexport default Cart;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport 'materialize-css';\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport { StoreProvider } from './utils/GlobalState';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\nimport HomeCarousel from './components/Carousel';\nimport HomeTab from './components/Tab';\nimport HomeFooter from './components/Footer';\nimport Cart from \"./components/Cart\"\nimport ProductList from './components/ProductList';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <HomeCarousel />\n            <HomeTab />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/success\" component={Success} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/products/:id\" component={Detail} />\n              <Route exact path=\"/cart\" component={Cart} />\n              <Route exact path=\"/brands/:category\" component={ProductList} />\n              <Route component={NoMatch} />\n            </Switch>\n          </StoreProvider>\n          <HomeFooter />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"materialize-css\"\nimport \"materialize-css/dist/css/materialize.min.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}